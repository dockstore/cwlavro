/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.cwl.avro;
/** Only valid as a `type` for a `CommandLineTool` output with no
`outputBinding` set.

The following
```
outputs:
  an_output_name:
  type: stderr

stderr: a_stderr_file
```
is equivalent to
```
outputs:
  an_output_name:
    type: File
    streamable: true
    outputBinding:
      glob: a_stderr_file

stderr: a_stderr_file
```

If there is no `stderr` name provided, a random filename will be created.
For example, the following
```
outputs:
  an_output_name:
    type: stderr
```
is equivalent to
```
outputs:
  an_output_name:
    type: File
    streamable: true
    outputBinding:
      glob: random_stderr_filenameABCDEFG

stderr: random_stderr_filenameABCDEFG
```
 */
@org.apache.avro.specific.AvroGenerated
public enum stderr implements org.apache.avro.generic.GenericEnumSymbol<stderr> {
  stderr  ;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"enum\",\"name\":\"stderr\",\"namespace\":\"io.cwl.avro\",\"doc\":\"Only valid as a `type` for a `CommandLineTool` output with no\\n`outputBinding` set.\\n\\nThe following\\n```\\noutputs:\\n  an_output_name:\\n  type: stderr\\n\\nstderr: a_stderr_file\\n```\\nis equivalent to\\n```\\noutputs:\\n  an_output_name:\\n    type: File\\n    streamable: true\\n    outputBinding:\\n      glob: a_stderr_file\\n\\nstderr: a_stderr_file\\n```\\n\\nIf there is no `stderr` name provided, a random filename will be created.\\nFor example, the following\\n```\\noutputs:\\n  an_output_name:\\n    type: stderr\\n```\\nis equivalent to\\n```\\noutputs:\\n  an_output_name:\\n    type: File\\n    streamable: true\\n    outputBinding:\\n      glob: random_stderr_filenameABCDEFG\\n\\nstderr: random_stderr_filenameABCDEFG\\n```\\n\",\"symbols\":[\"stderr\"],\"docParent\":\"https://w3id.org/cwl/cwl#CommandOutputParameter\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
}
