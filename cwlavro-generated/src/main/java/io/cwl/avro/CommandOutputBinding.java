/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.cwl.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Describes how to generate an output parameter based on the files produced
by a CommandLineTool.

The output parameter value is generated by applying these operations in the
following order:

  - glob
  - loadContents
  - outputEval
  - secondaryFiles
 */
@org.apache.avro.specific.AvroGenerated
public class CommandOutputBinding extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4205012804122121567L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CommandOutputBinding\",\"namespace\":\"io.cwl.avro\",\"doc\":\"Describes how to generate an output parameter based on the files produced\\nby a CommandLineTool.\\n\\nThe output parameter value is generated by applying these operations in the\\nfollowing order:\\n\\n  - glob\\n  - loadContents\\n  - outputEval\\n  - secondaryFiles\\n\",\"fields\":[{\"name\":\"glob\",\"type\":[\"null\",\"string\",{\"type\":\"enum\",\"name\":\"Expression\",\"doc\":\"'Expression' is not a real type.  It indicates that a field must allow\\nruntime parameter references.  If [InlineJavascriptRequirement](#InlineJavascriptRequirement)\\nis declared and supported by the platform, the field must also allow\\nJavascript expressions.\\n\",\"symbols\":[\"ExpressionPlaceholder\"]},{\"type\":\"array\",\"items\":\"string\"}],\"doc\":\"Find files relative to the output directory, using POSIX glob(3)\\npathname matching.  If an array is provided, find files that match any\\npattern in the array.  If an expression is provided, the expression must\\nreturn a string or an array of strings, which will then be evaluated as\\none or more glob patterns.  Must only match and return files which\\nactually exist.\\n\"},{\"name\":\"loadContents\",\"type\":[\"null\",\"boolean\"],\"doc\":\"For each file matched in `glob`, read up to\\nthe first 64 KiB of text from the file and place it in the `contents`\\nfield of the file object for manipulation by `outputEval`.\\n\",\"jsonldPredicate\":\"cwl:loadContents\"},{\"name\":\"outputEval\",\"type\":[\"null\",\"string\",\"Expression\"],\"doc\":\"Evaluate an expression to generate the output value.  If `glob` was\\nspecified, the value of `self` must be an array containing file objects\\nthat were matched.  If no files were matched, `self` must be a zero\\nlength array; if a single file was matched, the value of `self` is an\\narray of a single element.  Additionally, if `loadContents` is `true`,\\nthe File objects must include up to the first 64 KiB of file contents\\nin the `contents` field.\\n\"}],\"extends\":\"https://w3id.org/cwl/cwl#OutputBinding\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CommandOutputBinding> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CommandOutputBinding> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CommandOutputBinding> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CommandOutputBinding> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CommandOutputBinding> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CommandOutputBinding to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CommandOutputBinding from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CommandOutputBinding instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CommandOutputBinding fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Find files relative to the output directory, using POSIX glob(3)
pathname matching.  If an array is provided, find files that match any
pattern in the array.  If an expression is provided, the expression must
return a string or an array of strings, which will then be evaluated as
one or more glob patterns.  Must only match and return files which
actually exist.
 */
  private java.lang.Object glob;
  /** For each file matched in `glob`, read up to
the first 64 KiB of text from the file and place it in the `contents`
field of the file object for manipulation by `outputEval`.
 */
  private java.lang.Boolean loadContents;
  /** Evaluate an expression to generate the output value.  If `glob` was
specified, the value of `self` must be an array containing file objects
that were matched.  If no files were matched, `self` must be a zero
length array; if a single file was matched, the value of `self` is an
array of a single element.  Additionally, if `loadContents` is `true`,
the File objects must include up to the first 64 KiB of file contents
in the `contents` field.
 */
  private java.lang.Object outputEval;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CommandOutputBinding() {}

  /**
   * All-args constructor.
   * @param glob Find files relative to the output directory, using POSIX glob(3)
pathname matching.  If an array is provided, find files that match any
pattern in the array.  If an expression is provided, the expression must
return a string or an array of strings, which will then be evaluated as
one or more glob patterns.  Must only match and return files which
actually exist.

   * @param loadContents For each file matched in `glob`, read up to
the first 64 KiB of text from the file and place it in the `contents`
field of the file object for manipulation by `outputEval`.

   * @param outputEval Evaluate an expression to generate the output value.  If `glob` was
specified, the value of `self` must be an array containing file objects
that were matched.  If no files were matched, `self` must be a zero
length array; if a single file was matched, the value of `self` is an
array of a single element.  Additionally, if `loadContents` is `true`,
the File objects must include up to the first 64 KiB of file contents
in the `contents` field.

   */
  public CommandOutputBinding(java.lang.Object glob, java.lang.Boolean loadContents, java.lang.Object outputEval) {
    this.glob = glob;
    this.loadContents = loadContents;
    this.outputEval = outputEval;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return glob;
    case 1: return loadContents;
    case 2: return outputEval;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: glob = value$; break;
    case 1: loadContents = (java.lang.Boolean)value$; break;
    case 2: outputEval = value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'glob' field.
   * @return Find files relative to the output directory, using POSIX glob(3)
pathname matching.  If an array is provided, find files that match any
pattern in the array.  If an expression is provided, the expression must
return a string or an array of strings, which will then be evaluated as
one or more glob patterns.  Must only match and return files which
actually exist.

   */
  public java.lang.Object getGlob() {
    return glob;
  }


  /**
   * Sets the value of the 'glob' field.
   * Find files relative to the output directory, using POSIX glob(3)
pathname matching.  If an array is provided, find files that match any
pattern in the array.  If an expression is provided, the expression must
return a string or an array of strings, which will then be evaluated as
one or more glob patterns.  Must only match and return files which
actually exist.

   * @param value the value to set.
   */
  public void setGlob(java.lang.Object value) {
    this.glob = value;
  }

  /**
   * Gets the value of the 'loadContents' field.
   * @return For each file matched in `glob`, read up to
the first 64 KiB of text from the file and place it in the `contents`
field of the file object for manipulation by `outputEval`.

   */
  public java.lang.Boolean getLoadContents() {
    return loadContents;
  }


  /**
   * Sets the value of the 'loadContents' field.
   * For each file matched in `glob`, read up to
the first 64 KiB of text from the file and place it in the `contents`
field of the file object for manipulation by `outputEval`.

   * @param value the value to set.
   */
  public void setLoadContents(java.lang.Boolean value) {
    this.loadContents = value;
  }

  /**
   * Gets the value of the 'outputEval' field.
   * @return Evaluate an expression to generate the output value.  If `glob` was
specified, the value of `self` must be an array containing file objects
that were matched.  If no files were matched, `self` must be a zero
length array; if a single file was matched, the value of `self` is an
array of a single element.  Additionally, if `loadContents` is `true`,
the File objects must include up to the first 64 KiB of file contents
in the `contents` field.

   */
  public java.lang.Object getOutputEval() {
    return outputEval;
  }


  /**
   * Sets the value of the 'outputEval' field.
   * Evaluate an expression to generate the output value.  If `glob` was
specified, the value of `self` must be an array containing file objects
that were matched.  If no files were matched, `self` must be a zero
length array; if a single file was matched, the value of `self` is an
array of a single element.  Additionally, if `loadContents` is `true`,
the File objects must include up to the first 64 KiB of file contents
in the `contents` field.

   * @param value the value to set.
   */
  public void setOutputEval(java.lang.Object value) {
    this.outputEval = value;
  }

  /**
   * Creates a new CommandOutputBinding RecordBuilder.
   * @return A new CommandOutputBinding RecordBuilder
   */
  public static io.cwl.avro.CommandOutputBinding.Builder newBuilder() {
    return new io.cwl.avro.CommandOutputBinding.Builder();
  }

  /**
   * Creates a new CommandOutputBinding RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CommandOutputBinding RecordBuilder
   */
  public static io.cwl.avro.CommandOutputBinding.Builder newBuilder(io.cwl.avro.CommandOutputBinding.Builder other) {
    if (other == null) {
      return new io.cwl.avro.CommandOutputBinding.Builder();
    } else {
      return new io.cwl.avro.CommandOutputBinding.Builder(other);
    }
  }

  /**
   * Creates a new CommandOutputBinding RecordBuilder by copying an existing CommandOutputBinding instance.
   * @param other The existing instance to copy.
   * @return A new CommandOutputBinding RecordBuilder
   */
  public static io.cwl.avro.CommandOutputBinding.Builder newBuilder(io.cwl.avro.CommandOutputBinding other) {
    if (other == null) {
      return new io.cwl.avro.CommandOutputBinding.Builder();
    } else {
      return new io.cwl.avro.CommandOutputBinding.Builder(other);
    }
  }

  /**
   * RecordBuilder for CommandOutputBinding instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CommandOutputBinding>
    implements org.apache.avro.data.RecordBuilder<CommandOutputBinding> {

    /** Find files relative to the output directory, using POSIX glob(3)
pathname matching.  If an array is provided, find files that match any
pattern in the array.  If an expression is provided, the expression must
return a string or an array of strings, which will then be evaluated as
one or more glob patterns.  Must only match and return files which
actually exist.
 */
    private java.lang.Object glob;
    /** For each file matched in `glob`, read up to
the first 64 KiB of text from the file and place it in the `contents`
field of the file object for manipulation by `outputEval`.
 */
    private java.lang.Boolean loadContents;
    /** Evaluate an expression to generate the output value.  If `glob` was
specified, the value of `self` must be an array containing file objects
that were matched.  If no files were matched, `self` must be a zero
length array; if a single file was matched, the value of `self` is an
array of a single element.  Additionally, if `loadContents` is `true`,
the File objects must include up to the first 64 KiB of file contents
in the `contents` field.
 */
    private java.lang.Object outputEval;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.cwl.avro.CommandOutputBinding.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.glob)) {
        this.glob = data().deepCopy(fields()[0].schema(), other.glob);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.loadContents)) {
        this.loadContents = data().deepCopy(fields()[1].schema(), other.loadContents);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.outputEval)) {
        this.outputEval = data().deepCopy(fields()[2].schema(), other.outputEval);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing CommandOutputBinding instance
     * @param other The existing instance to copy.
     */
    private Builder(io.cwl.avro.CommandOutputBinding other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.glob)) {
        this.glob = data().deepCopy(fields()[0].schema(), other.glob);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.loadContents)) {
        this.loadContents = data().deepCopy(fields()[1].schema(), other.loadContents);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.outputEval)) {
        this.outputEval = data().deepCopy(fields()[2].schema(), other.outputEval);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'glob' field.
      * Find files relative to the output directory, using POSIX glob(3)
pathname matching.  If an array is provided, find files that match any
pattern in the array.  If an expression is provided, the expression must
return a string or an array of strings, which will then be evaluated as
one or more glob patterns.  Must only match and return files which
actually exist.

      * @return The value.
      */
    public java.lang.Object getGlob() {
      return glob;
    }


    /**
      * Sets the value of the 'glob' field.
      * Find files relative to the output directory, using POSIX glob(3)
pathname matching.  If an array is provided, find files that match any
pattern in the array.  If an expression is provided, the expression must
return a string or an array of strings, which will then be evaluated as
one or more glob patterns.  Must only match and return files which
actually exist.

      * @param value The value of 'glob'.
      * @return This builder.
      */
    public io.cwl.avro.CommandOutputBinding.Builder setGlob(java.lang.Object value) {
      validate(fields()[0], value);
      this.glob = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'glob' field has been set.
      * Find files relative to the output directory, using POSIX glob(3)
pathname matching.  If an array is provided, find files that match any
pattern in the array.  If an expression is provided, the expression must
return a string or an array of strings, which will then be evaluated as
one or more glob patterns.  Must only match and return files which
actually exist.

      * @return True if the 'glob' field has been set, false otherwise.
      */
    public boolean hasGlob() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'glob' field.
      * Find files relative to the output directory, using POSIX glob(3)
pathname matching.  If an array is provided, find files that match any
pattern in the array.  If an expression is provided, the expression must
return a string or an array of strings, which will then be evaluated as
one or more glob patterns.  Must only match and return files which
actually exist.

      * @return This builder.
      */
    public io.cwl.avro.CommandOutputBinding.Builder clearGlob() {
      glob = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'loadContents' field.
      * For each file matched in `glob`, read up to
the first 64 KiB of text from the file and place it in the `contents`
field of the file object for manipulation by `outputEval`.

      * @return The value.
      */
    public java.lang.Boolean getLoadContents() {
      return loadContents;
    }


    /**
      * Sets the value of the 'loadContents' field.
      * For each file matched in `glob`, read up to
the first 64 KiB of text from the file and place it in the `contents`
field of the file object for manipulation by `outputEval`.

      * @param value The value of 'loadContents'.
      * @return This builder.
      */
    public io.cwl.avro.CommandOutputBinding.Builder setLoadContents(java.lang.Boolean value) {
      validate(fields()[1], value);
      this.loadContents = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'loadContents' field has been set.
      * For each file matched in `glob`, read up to
the first 64 KiB of text from the file and place it in the `contents`
field of the file object for manipulation by `outputEval`.

      * @return True if the 'loadContents' field has been set, false otherwise.
      */
    public boolean hasLoadContents() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'loadContents' field.
      * For each file matched in `glob`, read up to
the first 64 KiB of text from the file and place it in the `contents`
field of the file object for manipulation by `outputEval`.

      * @return This builder.
      */
    public io.cwl.avro.CommandOutputBinding.Builder clearLoadContents() {
      loadContents = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'outputEval' field.
      * Evaluate an expression to generate the output value.  If `glob` was
specified, the value of `self` must be an array containing file objects
that were matched.  If no files were matched, `self` must be a zero
length array; if a single file was matched, the value of `self` is an
array of a single element.  Additionally, if `loadContents` is `true`,
the File objects must include up to the first 64 KiB of file contents
in the `contents` field.

      * @return The value.
      */
    public java.lang.Object getOutputEval() {
      return outputEval;
    }


    /**
      * Sets the value of the 'outputEval' field.
      * Evaluate an expression to generate the output value.  If `glob` was
specified, the value of `self` must be an array containing file objects
that were matched.  If no files were matched, `self` must be a zero
length array; if a single file was matched, the value of `self` is an
array of a single element.  Additionally, if `loadContents` is `true`,
the File objects must include up to the first 64 KiB of file contents
in the `contents` field.

      * @param value The value of 'outputEval'.
      * @return This builder.
      */
    public io.cwl.avro.CommandOutputBinding.Builder setOutputEval(java.lang.Object value) {
      validate(fields()[2], value);
      this.outputEval = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'outputEval' field has been set.
      * Evaluate an expression to generate the output value.  If `glob` was
specified, the value of `self` must be an array containing file objects
that were matched.  If no files were matched, `self` must be a zero
length array; if a single file was matched, the value of `self` is an
array of a single element.  Additionally, if `loadContents` is `true`,
the File objects must include up to the first 64 KiB of file contents
in the `contents` field.

      * @return True if the 'outputEval' field has been set, false otherwise.
      */
    public boolean hasOutputEval() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'outputEval' field.
      * Evaluate an expression to generate the output value.  If `glob` was
specified, the value of `self` must be an array containing file objects
that were matched.  If no files were matched, `self` must be a zero
length array; if a single file was matched, the value of `self` is an
array of a single element.  Additionally, if `loadContents` is `true`,
the File objects must include up to the first 64 KiB of file contents
in the `contents` field.

      * @return This builder.
      */
    public io.cwl.avro.CommandOutputBinding.Builder clearOutputEval() {
      outputEval = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CommandOutputBinding build() {
      try {
        CommandOutputBinding record = new CommandOutputBinding();
        record.glob = fieldSetFlags()[0] ? this.glob :  defaultValue(fields()[0]);
        record.loadContents = fieldSetFlags()[1] ? this.loadContents : (java.lang.Boolean) defaultValue(fields()[1]);
        record.outputEval = fieldSetFlags()[2] ? this.outputEval :  defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CommandOutputBinding>
    WRITER$ = (org.apache.avro.io.DatumWriter<CommandOutputBinding>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CommandOutputBinding>
    READER$ = (org.apache.avro.io.DatumReader<CommandOutputBinding>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










